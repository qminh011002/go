package main

import "fmt"

// Methods are essential in go for encapsulating
// behavior specific to a type and promoting code reuse

// Value Receiver & Pointer Receiver

// Pointer Receiver
// Avoid copy large struct

// 3 types of Receiver
// func (t Type) name : Value Receiver
// func (Type) name : Value Receiver
// func (t *Type) name : Pointer Receiver

type Shape struct {
	Rectangle
}

type Rectangle struct {
	length float64
	width  float64
}

// Value Receiver
func (r Rectangle) area() float64 {
	return r.length * r.width
}

func main() {
	// rect := Rectangle{
	// 	length: 10,
	// 	width:  4,
	// }

	// result := rect.area()
	// fmt.Println(result)

	// // Scale
	// rect.Scale(2)

	// fmt.Println(rect.area())

	// num := MyInt(2)

	// fmt.Println(num.IsPositive())

	s := Shape{
		Rectangle: Rectangle{
			length: 10,
			width:  9,
		},
	}

	fmt.Println(s.area())
}
