package main

import "fmt"

func main() {

	// ... Ellipsis
	// func fnName(param1 type1, param2 type2, param3 ...type3) returnType {}

	// fmt.Println(addTo(3))             // []
	// fmt.Println(addTo(3, 2))          // [5]
	// fmt.Println(addTo(3, 2, 4, 6, 8)) // [5, 7, 9, 11]

	// a := []int{4, 3}
	// fmt.Println(addTo(3, a...))                    // [7, 6]
	// fmt.Println(addTo(3, []int{1, 2, 3, 4, 5}...)) // [4,5,6,7,8]

	nums := []int{1, 2, 3, 4, 5}

	statement, total := sum("Sum o them is", nums...)

	fmt.Println(statement, total)
}

func addTo(base int, vals ...int) []int {
	out := make([]int, 0, len(vals))

	for _, v := range vals {
		out = append(out, base+v)
	}

	return out
}

func sum(returnString string, nums ...int) (string, int) {
	total := 0

	for _, v := range nums {
		total += v
	}

	return returnString, total
}

func sum2(sequence int, nums ...int) (int, int) {
	total := 0

	for _, v := range nums {
		total += v
	}

	return sequence, total
}
